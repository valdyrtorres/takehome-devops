["^ ","~:output",["^ ","~:js","goog.provide('taoensso.truss');\n/**\n * Returns current value of dynamic assertion data.\n */\ntaoensso.truss.get_dynamic_assertion_data = (function taoensso$truss$get_dynamic_assertion_data(){\nreturn taoensso.truss.impl._STAR__QMARK_data_STAR_;\n});\ntaoensso.truss._error_fn = (function taoensso$truss$_error_fn(f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328))){\nreturn taoensso.truss.impl.default_error_fn;\n} else {\nreturn f;\n}\n});\n/**\n * Sets the root (fn [data-map-delay]) called on invariant violations.\n */\ntaoensso.truss.set_error_fn_BANG_ = (function taoensso$truss$set_error_fn_BANG_(f){\nreturn (taoensso.truss.impl._STAR_error_fn_STAR_ = taoensso.truss._error_fn(f));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","An opinionated assertions API for Clojure/Script.","~:file","taoensso/truss.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$-invariant","~$taoensso.truss.impl"],"~:excludes",["~#set",[]],"~:name","~$taoensso.truss","~:op","~:ns","~:imports",null,"~:requires",["^ ","^D","^D","~$impl","^D","~$cljs.core","^N","~$goog","^O"],"~:seen",["^F",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^D","^D","^M","^D","^N","^N"],"~:form",["~#list",["~$ns","^H","An opinionated assertions API for Clojure/Script.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^U",["^Q",["^D","~:as","^M","~:refer-macros",["^C"]]]]]],"~:flags",["^ ","^Q",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^D"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","taoensso/truss.cljs"],"~:compiled-at",1719701901003,"~:resource-name","taoensso/truss.cljs","~:warnings",[],"~:source","(ns taoensso.truss\n  \"An opinionated assertions API for Clojure/Script.\"\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n                                                                             \n         (:require [taoensso.truss.impl :as impl :refer-macros [-invariant]]))\n\n(comment (require '[taoensso.encore :as enc :refer (qb)]))\n\n;;;; Core API\n\n              \n                                                                  \n                                                                             \n                                                                     \n\n                                                                         \n                \n\n                                                                             \n                                                  \n\n                                                                  \n                                              \n\n                                                                   \n                                                               \n\n                             \n                                                        \n                                                                    \n\n               \n                                                                          \n                                                           \n                                                                     \n                                                                                    \n                                                        \n                                                                        \n\n               \n                                                                          \n                                                                 \n                                                        \n                                                              \n\n                \n                                                                           \n                                                                          \n                                        \n\n                                                                            \n                                                                            \n                                                        \n                                                                         \n\n(comment\n  (let [x 5]      (have    integer? x))\n  (let [x 5]      (have    string?  x))\n  (let [x 5]      (have :! string?  x))\n  (let [x 5 y  6] (have odd?  x x x y x))\n  (let [x 0 y :a] (have zero? x x x y x))\n  (have string? (do (println \"eval1\") \"foo\")\n                (do (println \"eval2\") \"bar\"))\n  (have number? (do (println \"eval1\") 5)\n                (do (println \"eval2\") \"bar\")\n                (do (println \"eval3\") 10))\n  (have pos? \"hello\")\n  (have pos? (/ 1 0))\n  (have nil? false)\n  (have nil)\n  (have false)\n  (have string? :in [\"a\" \"b\"])\n  (have string? :in (if true  [\"a\" \"b\"] [1 2]))\n  (have string? :in (if false [\"a\" \"b\"] [1 2]))\n  (have string? :in (mapv str (range 10)))\n  (have string? :in [\"a\" 1])\n  (have string? :in [\"a\" \"b\"] [\"a\" \"b\"])\n  (have string? :in [\"a\" \"b\"] [\"a\" \"b\" 1])\n  ((fn foo [x] {:pre [(have? integer? x)]} (* x x)) \"foo\")\n  (macroexpand '(have a))\n  (have? [:or nil? string?] \"hello\")\n  (macroexpand '(have? [:or nil? string?] \"hello\"))\n  (have? [:set>= #{:a :b}]    [:a :b :c])\n  (have? [:set<= [:a :b :c]] #{:a :b})\n  (qb 10000\n    (with-error-fn nil                  (have? string? 5))\n    (with-error-fn (fn [_] :truss/error) (have? string? 5)))\n\n  (have string? (range 1000)))\n\n(comment\n  ;; HotSpot is great with these:\n  (qb 10000\n    (string? \"a\")\n    (have?   \"a\")\n    (have            string?  \"a\" \"b\" \"c\")\n    (have? [:or nil? string?] \"a\" \"b\" \"c\")\n    (have? [:or nil? string?] \"a\" \"b\" \"c\" :data \"foo\"))\n  ;; [     5.59 26.48 45.82     ] ; 1st gen (macro form)\n  ;; [     3.31 13.48 36.22     ] ; 2nd gen (fn form)\n  ;; [0.82 1.75  7.57 27.05     ] ; 3rd gen (lean macro form)\n  ;; [0.4  0.47  1.3  1.77  1.53] ; 4th gen (macro preds)\n\n  (qb 10000\n    (have  string? :in [\"foo\" \"bar\" \"baz\"])\n    (have? string? :in [\"foo\" \"bar\" \"baz\"]))\n\n  (macroexpand '(have string? 5))\n  (macroexpand '(have string? 5 :data \"foo\"))\n  (macroexpand '(have string? 5 :data (enc/get-env)))\n  (let [x :x]   (have string? 5 :data (enc/get-env)))\n\n  (have string? 5)\n  (have string? 5 :data {:a \"a\"})\n  (have string? 5 :data {:a (/ 5 0)})\n\n  ((fn [x]\n     (let [a \"a\" b \"b\"]\n       (have string? x :data {:env (enc/get-env)}))) 5))\n\n;;;; Utils\n\n(defn get-dynamic-assertion-data\n  \"Returns current value of dynamic assertion data.\"\n  [] impl/*?data*)\n\n                                     \n                                                                  \n                                                                     \n                                                       \n\n(comment (with-dynamic-assertion-data \"foo\" (have string? 5 :data \"bar\")))\n\n(defn-   -error-fn [f] (if (= f :default) impl/default-error-fn f))\n(defn set-error-fn!\n  \"Sets the root (fn [data-map-delay]) called on invariant violations.\"\n  [f]\n         (set!             impl/*error-fn*        (-error-fn f))\n                                                                  )\n\n                                  \n                                                     \n\n;;;;;;;;;;;; This file autogenerated from src/taoensso/truss.cljx\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";AAMA,AAiDA,AAmCA,AAgCA;;;AAAA,AAAMA;AAAN,AAEKC;;AAOL,AAEA,AAAA,AAASC,AAAWC;AAApB,AAAuB,AAAI,AAAA,AAACC,AAAED;AAAYE;;AAAsBF;;;AAChE;;;AAAA,AAAMG,AAEHH;AAFH,AAGS,AAAkBI,AAAuB,AAACL,AAAUC","names",["taoensso.truss/get-dynamic-assertion-data","taoensso.truss.impl/*?data*","taoensso.truss/-error-fn","f","cljs.core._EQ_","taoensso.truss.impl/default-error-fn","taoensso.truss/set-error-fn!","taoensso.truss.impl/*error-fn*"]],"~:used-vars",["^F",["~$cljs.core/=","~$taoensso.truss/get-dynamic-assertion-data","~$taoensso.truss.impl/*?data*","~$taoensso.truss.impl/default-error-fn","~$taoensso.truss.impl/*error-fn*","~$taoensso.truss/set-error-fn!","~$taoensso.truss/-error-fn"]]],"~:cache-keys",["~#cmap",[["^11","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^O","~$goog.dom.HtmlElement"]]],["^11","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","~$goog.array","~$goog.asserts"]]],["^11","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^11","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^1O"]]],["^11","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L"]]],["^11","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L"]]],"~:SHADOW-TIMESTAMP",[1719461811000,1719461811000,1719461795000],["^11","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","~$goog.reflect"]]],["^11","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","~$goog.html.trustedtypes","^1R","^1S","^1T","^1U"]]],["^11","taoensso/truss.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^N","^D"]]],["^11","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1L","~$goog.html.SafeUrl","^1T","^1U","^1O"]]],["^11","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^1Y","^1Q","~$goog.html.uncheckedconversions","^1T","^1O"]]],["^11","taoensso/truss/impl.cljs"],["ef3f595da76cbcbe40124ee0a858b7ca635d30f2","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^N","~$clojure.set"]]],["^11","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^11","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1L","~$goog.dom.TagName","~$goog.dom.tags","^21","^22","~$goog.html.SafeStyleSheet","^1Y","^1Q","^1X","^1R","^1S","~$goog.labs.userAgent.browser","^1N","^1T","^1U","^1O"]]],["^11","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1N"]]],["^11","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^11","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1L","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^11","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",[]]],["^11","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1N"]]],["^11","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","~$goog.dom.safe","^23","^1T","^1O"]]],["^11","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1O"]]],["^11","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1L","^1[","~$goog.math"]]],["^11","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","^20","^21","^22","^29","^1Y","^1Q","^1T","^1O"]]],["^11","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O"]]],["^11","cljs/core.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","~$goog.math.Long","~$goog.math.Integer","^2=","^1N","^1K","~$goog.Uri","~$goog.string.StringBuffer"]]],["^11","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","^1X","^1T","^1U"]]],["^11","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1L","^22","^1N","^1T","^1U","^1O"]]],["^11","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1W"]]],["^11","clojure/set.cljs"],["2b61436b8e6c3d6d48282f388e875faa3ffc3422","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^N"]]],["^11","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1K","^1L","^2="]]],["^11","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^1F",["^ ","^1G",null,"^1H",["^F",[]],"^1I",["^O","^1L","^1U"]]]]],"~:clj-info",["^ ","jar:file:/home/valdir/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1719461781000,"jar:file:/home/valdir/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1719461781000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/env.cljc",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1719461781000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64_vlq.clj",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/js_deps.cljc",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map/base64.clj",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/core.cljc",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/com/taoensso/truss/1.5.0/truss-1.5.0.jar!/taoensso/truss/impl.clj",1719461808000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/analyzer.cljc",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1719461781000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/externs.clj",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/compiler.cljc",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/source_map.clj",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1719461781000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1719461794000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/tagged_literals.cljc",1719461795000,"jar:file:/home/valdir/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1719461781000,"jar:file:/home/valdir/.m2/repository/org/clojure/clojurescript/1.10.758/clojurescript-1.10.758.jar!/cljs/util.cljc",1719461795000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","An opinionated assertions API for Clojure/Script.","^8","taoensso/truss.cljs","^9",1,"^:",5,"^;",1,"^<",19],"^=",["^ ","^>","^?","^@","^A"],"^B",["^ ","^C","^D"],"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^D","^D","^M","^D","^N","^N","^O","^O"],"^P",["^F",["^Q"]],"^R",null,"~:defs",["^ ","~$get-dynamic-assertion-data",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/truss.cljs","^9",123,"^:",7,"^;",123,"^<",33,"~:arglists",["^U",["~$quote",["^U",[[]]]]],"^7","Returns current value of dynamic assertion data."],"^G","^1>","^8","taoensso/truss.cljs","^<",33,"~:method-params",["^U",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^:",1,"~:variadic?",false,"^9",123,"~:ret-tag","~$any","^;",123,"~:max-fixed-arity",0,"~:fn-var",true,"^3;",["^U",["^3<",["^U",[[]]]]],"^7","Returns current value of dynamic assertion data."],"~$-error-fn",["^ ","^3:",null,"^5",["^ ","^8","taoensso/truss.cljs","^9",134,"^:",10,"^;",134,"^<",19,"~:private",true,"^3;",["^U",["^3<",["^U",[["~$f"]]]]]],"^3F",true,"^G","^1C","^8","taoensso/truss.cljs","^<",19,"^3=",["^U",[["~$f"]]],"^3>",null,"^3?",["^U",[null,null]],"^:",1,"^3@",false,"^9",134,"^;",134,"^3C",1,"^3D",true,"^3;",["^U",["^3<",["^U",[["~$f"]]]]]],"~$set-error-fn!",["^ ","^3:",null,"^5",["^ ","^8","taoensso/truss.cljs","^9",135,"^:",7,"^;",135,"^<",20,"^3;",["^U",["^3<",["^U",[["~$f"]]]]],"^7","Sets the root (fn [data-map-delay]) called on invariant violations."],"^G","^1B","^8","taoensso/truss.cljs","^<",20,"^3=",["^U",[["~$f"]]],"^3>",null,"^3?",["^U",[null,null]],"^:",1,"^3@",false,"^9",135,"^;",135,"^3C",1,"^3D",true,"^3;",["^U",["^3<",["^U",[["~$f"]]]]],"^7","Sets the root (fn [data-map-delay]) called on invariant violations."]],"^S",["^ ","^D","^D","^M","^D","^N","^N"],"~:cljs.analyzer/constants",["^ ","^P",["^F",["~:default"]],"~:order",["^3I"]],"^Y",["^ ","^Q",["^F",[]]],"^Z",["^ "],"^[",["^O","^N","^D"]],"^J","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^1E",[["^3M","~:static-fns"],true,["^3M","~:shadow-tweaks"],null,["^3M","~:source-map-inline"],null,["^3M","~:elide-asserts"],true,["^3M","~:optimize-constants"],null,["^3M","^14"],null,["^3M","~:external-config"],null,["^3M","~:tooling-config"],null,["^3M","~:emit-constants"],null,["^3M","~:load-tests"],false,["^3M","~:form-size-threshold"],null,["^3M","~:infer-externs"],true,["^3M","^16"],null,["~:js-options","~:js-provider"],"^Q",["~:mode"],"~:release",["^3M","~:fn-invoke-direct"],null,["^3M","~:source-map"],null]]]